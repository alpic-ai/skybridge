name: Publish Release

on:
  release:
    types: [published]

jobs:
  publish-release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 22
          registry-url: "https://registry.npmjs.org"

      - uses: pnpm/action-setup@v4

      - run: pnpm install --frozen-lockfile

      - run: pnpm build

      - name: Extract version from release
        id: extract_version
        run: |
          # Remove 'v' prefix from release tag (e.g., v1.0.0 -> 1.0.0)
          VERSION=${GITHUB_REF#refs/tags/v}

          # Validate version format (strict X.Y.Z only)
          if [[ ! $VERSION =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "❌ Error: Invalid version format: '$VERSION'"
            echo "Expected format: X.Y.Z (major.minor.patch)"
            echo "Examples: 1.0.0, 1.2.3, 2.0.0"
            exit 1
          fi

          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "✅ Extracted version: $VERSION"
          echo "Release name: ${{ github.event.release.name }}"
          echo "Release body: ${{ github.event.release.body }}"

      - name: Update package.json version
        run: |
          npm version ${{ steps.extract_version.outputs.version }} --no-git-tag-version

      - name: Publish to npm
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
